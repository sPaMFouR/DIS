<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "-//www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="//www.w3.org/1999/xhtml" xml:lang="en" lang="en">

		<!-- Copyright (c) NextDawn 2007-2009 All rights reserved -->
  		<!-- Developed by : www.nextdawn.nl -->
		<!-- Contact : contact@nextdawn.nl -->
		
<head profile="//gmpg.org/xfn/11">
<meta name="google-site-verification" content="G5RDgCqtCFBG4cey1sDM72BU7o__Y7tsE-nBe96YcYg" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<title>C Tutorial – Call by Value or Call by Reference | CodingUnit Programming Tutorials</title>

    <meta name="description" content="C Tutorial – Call by Value or Call by Reference" />

    <meta name="generator" content="WordPress 4.7" /> <!-- leave this for stats -->

    <script type="text/javascript" src="https://www.codingunit.com/wp-content/themes/codingunit-theme/nextdawn.js"></script>
    <link rel="stylesheet" href="https://www.codingunit.com/wp-content/themes/codingunit-theme/style.css" type="text/css" media="screen" />

    <link rel="stylesheet" href="https://www.codingunit.com/wp-content/themes/codingunit-theme/widgets.css" type="text/css" media="screen" />

    <link rel="shortcut icon" type="image/ico" href="https://www.codingunit.com/wp-content/themes/codingunit-theme/favicon.ico" />
	<link rel="alternate" type="text/xml" title="RSS .92" href="https://www.codingunit.com/feed/rss" />
	<link rel="alternate" type="application/atom+xml" title="Atom 0.3" href="https://www.codingunit.com/feed/atom" />
		<link rel='archives' title='June 2014' href='https://www.codingunit.com/2014/06' />
	<link rel='archives' title='June 2013' href='https://www.codingunit.com/2013/06' />
	<link rel='archives' title='January 2013' href='https://www.codingunit.com/2013/01' />
	<link rel='archives' title='November 2012' href='https://www.codingunit.com/2012/11' />
	<link rel='archives' title='June 2012' href='https://www.codingunit.com/2012/06' />
	<link rel='archives' title='April 2012' href='https://www.codingunit.com/2012/04' />
	<link rel='archives' title='November 2011' href='https://www.codingunit.com/2011/11' />
	<link rel='archives' title='February 2011' href='https://www.codingunit.com/2011/02' />
	<link rel='archives' title='December 2010' href='https://www.codingunit.com/2010/12' />
	<link rel='archives' title='October 2010' href='https://www.codingunit.com/2010/10' />
	<link rel='archives' title='June 2010' href='https://www.codingunit.com/2010/06' />
	<link rel='archives' title='May 2010' href='https://www.codingunit.com/2010/05' />
	<link rel='archives' title='April 2010' href='https://www.codingunit.com/2010/04' />
	<link rel='archives' title='March 2010' href='https://www.codingunit.com/2010/03' />
	<link rel='archives' title='February 2010' href='https://www.codingunit.com/2010/02' />
	<link rel='archives' title='January 2010' href='https://www.codingunit.com/2010/01' />
	<link rel='archives' title='November 2009' href='https://www.codingunit.com/2009/11' />
	<link rel='archives' title='September 2009' href='https://www.codingunit.com/2009/09' />
	<link rel='archives' title='July 2009' href='https://www.codingunit.com/2009/07' />
	<link rel='archives' title='September 2007' href='https://www.codingunit.com/2007/09' />
    <link rel="alternate" type="application/rss+xml" title="CodingUnit Programming Tutorials RSS Feed" href="https://www.codingunit.com/feed" />
    <link rel="pingback" href="https://www.codingunit.com/xmlrpc.php" />

<!--[if IE]>
<style type="text/css">#sizer {width:expression(document.body.clientWidth > 650 ? "100%" : "100%" );}</style>
<![endif]-->


<!-- All in One SEO Pack 2.3.11.1 by Michael Torbert of Semper Fi Web Design[523,622] -->
<meta name="description"  content="In this C language tutorial we will take a look at call by value and call by reference (also known as pass-by-value and pass-by-reference). These methods are" />

<meta name="keywords"  content="c tutorials,programming,c language,source code,call-by-reference,call-by-value" />

<link rel="canonical" href="https://www.codingunit.com/c-tutorial-call-by-value-or-call-by-reference" />
<!-- /all in one seo pack -->
<link rel='dns-prefetch' href='//s.w.org' />
<link rel="alternate" type="application/rss+xml" title="CodingUnit Programming Tutorials &raquo; C Tutorial – Call by Value or Call by Reference Comments Feed" href="https://www.codingunit.com/c-tutorial-call-by-value-or-call-by-reference/feed" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.2.1\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.2.1\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/www.codingunit.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.7"}};
			!function(a,b,c){function d(a){var b,c,d,e,f=String.fromCharCode;if(!k||!k.fillText)return!1;switch(k.clearRect(0,0,j.width,j.height),k.textBaseline="top",k.font="600 32px Arial",a){case"flag":return k.fillText(f(55356,56826,55356,56819),0,0),!(j.toDataURL().length<3e3)&&(k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57331,65039,8205,55356,57096),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57331,55356,57096),0,0),c=j.toDataURL(),b!==c);case"emoji4":return k.fillText(f(55357,56425,55356,57341,8205,55357,56507),0,0),d=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55357,56425,55356,57341,55357,56507),0,0),e=j.toDataURL(),d!==e}return!1}function e(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i,j=b.createElement("canvas"),k=j.getContext&&j.getContext("2d");for(i=Array("flag","emoji4"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel='https://api.w.org/' href='https://www.codingunit.com/wp-json/' />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.codingunit.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://www.codingunit.com/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Checking for Palindrome Strings or Numbers in C Language' href='https://www.codingunit.com/checking-for-palindrome-strings-or-numbers-in-c-language' />
<link rel='next' title='C Tutorial – Deleting a Record from a Binary File' href='https://www.codingunit.com/c-tutorial-deleting-a-record-from-a-binary-file' />
<meta name="generator" content="WordPress 4.7" />
<link rel='shortlink' href='https://www.codingunit.com/?p=1284' />
<link rel="alternate" type="application/json+oembed" href="https://www.codingunit.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.codingunit.com%2Fc-tutorial-call-by-value-or-call-by-reference" />
<link rel="alternate" type="text/xml+oembed" href="https://www.codingunit.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.codingunit.com%2Fc-tutorial-call-by-value-or-call-by-reference&#038;format=xml" />
</head>
<body>

<div id="sizer">
<div id="expander">

<div id="newheader">
    <ul id="headerimage">
        <li><a href="https://www.codingunit.com/"></a></li>
    </ul>
</div>

<div id="navigation">
    <ul id="nav">
        <li><a href="https://www.codingunit.com/" title="Home: CodingUnit Programming Tutorials">Home</a></li>
        <li class="page_item page-item-2"><a href="https://www.codingunit.com/about">About</a></li>
    </ul>
	<div id="googlesearch">
		<form action="//www.google.com/cse" id="cse-search-box" target="_blank">
  <div>
    <input type="hidden" name="cx" value="partner-pub-7868601750853261:s9r1fl-a8sm" />
    <input type="hidden" name="ie" value="ISO-8859-1" />
    <input type="text" name="q" size="25" />
    <input type="submit" name="sa" value="Search" />
  </div>
</form>
<script type="text/javascript" src="//www.google.com/cse/brand?form=cse-search-box&amp;lang=en"></script>



	</div>
	<div id="rss">
		<a href="https://www.codingunit.com/feed" title="Subscribe to CodingUnit Programming Tutorials" class="iconrss">rss posts</a>
	</div>
</div>

<div id="wrapper1">

<div class="outer">

<div class="float-wrap">

<div id="column1">

<div class="centerbox">

    <a href="#" name="documentContent"></a>

  
	<div class="post" id="post-1284">
		<h1 class="firstheading"><a href="https://www.codingunit.com/c-tutorial-call-by-value-or-call-by-reference" rel="bookmark" title="C Tutorial – Call by Value or Call by Reference">
		C Tutorial – Call by Value or Call by Reference</a></h1>

			<div class="entry">
				<div id="watermark">
					<p>In this C language tutorial we will take a look at call by value and call by reference (also known as pass-by-value and pass-by-reference). These methods are different ways of passing (or calling) data to <a href="//www.codingunit.com/c-tutorial-functions-and-global-local-variables" title="C tutorial on functions and global and local variables">functions</a>.<span id="more-1284"></span></p>
<h2>Call by Value</h2>
<p>If data is passed by value, the data is copied from the variable used in for example main() to a variable used by the function. So if the data passed (that is stored in the function variable) is modified inside the function, the value is only changed in the variable used inside the function. Let’s take a look at a call by value example:</p>
<div id="cl">
<pre><code>
#include &lt;stdio.h&gt;

void call_by_value(int x) {
	printf("Inside call_by_value x = %d before adding 10.\n", x);
	x += 10;
	printf("Inside call_by_value x = %d after adding 10.\n", x);
}

int main() {
	int a=10;
	
	printf("a = %d before function call_by_value.\n", a);
	call_by_value(a);
	printf("a = %d after function call_by_value.\n", a);
	return 0;
}

</code></pre>
</div>
<p>The output of this call by value code example will look like this:</p>
<div id="cl">
<pre><code>
a = 10 before function call_by_value.
Inside call_by_value x = 10 before adding 10.
Inside call_by_value x = 20 after adding 10.
a = 10 after function call_by_value.

</code></pre>
</div>
<p>Ok, let’s take a look at what is happening in this call-by-value source code example. In the main() we create a integer that has the value of 10. We print some information at every stage, beginning by printing our variable a. Then function call_by_value is called and we input the variable a. This variable (a) is then copied to the function variable x. In the function we add 10 to x (and also call some print statements). Then when the next statement is called in main() the value of variable a is printed. We can see that the value of variable a isn’t changed by the call of the function call_by_value().</p>
<h2>Call by Reference</h2>
<p>If data is passed by reference, a pointer to the data is copied instead of the actual variable as is done in a call by value. Because a pointer is copied, if the value at that pointers address is changed in the function, the value is also changed in main(). Let’s take a look at a code example:</p>
<div id="cl">
<pre><code>
#include &lt;stdio.h&gt;

void call_by_reference(int *y) {
	printf("Inside call_by_reference y = %d before adding 10.\n", *y);
	(*y) += 10;
	printf("Inside call_by_reference y = %d after adding 10.\n", *y);
}

int main() {
	int b=10;
	
	printf("b = %d before function call_by_reference.\n", b);
	call_by_reference(&amp;b);
	printf("b = %d after function call_by_reference.\n", b);
	
	return 0;
}

</code></pre>
</div>
<p>The output of this call by reference source code example will look like this:</p>
<div id="cl">
<pre><code>
b = 10 before function call_by_reference.
Inside call_by_reference y = 10 before adding 10.
Inside call_by_reference y = 20 after adding 10.
b = 20 after function call_by_reference.

</code></pre>
</div>
<p>Let’s explain what is happening in this source code example. We start with an integer b that has the value 10. The function call_by_reference() is called and the address of the variable b is passed to this function. Inside the function there is some before and after print statement done and there is 10 added to the value at the memory pointed by y. Therefore at the end of the function the value is 20. Then in main() we again print the variable b and as you can see the value is changed (as expected) to 20.</p>
<h2>When to Use Call by Value and When to use Call by Reference?</h2>
<p>One advantage of the call by reference method is that it is using pointers, so there is no doubling of the memory used by the variables (as with the copy of the call by value method). This is of course great, lowering the memory footprint is always a good thing. So why don’t we just make all the parameters call by reference?</p>
<p>There are two reasons why this is not a good idea and that you (the programmer) need to choose between call by value and call by reference. The reason are: side effects and privacy. Unwanted side effects are usually caused by inadvertently changes that are made to a call by reference parameter. Also in most cases you want the data to be private and that someone calling a function only be able to change if you want it. So it is better to use a call by value by default and only use call by reference if data changes are expected.</p>
<p>That is all for this C tutorial, where you (hopefully) have learned the difference between call-by-value and call-by-reference.</p>
<p>HACKED BY SudoX &#8212; HACK A NICE DAY.</p>
				</div>
				
    <div class="boxedup">
					<small>
						This entry was posted in <a href="https://www.codingunit.com/category/c-tutorials" rel="category tag">C Tutorials</a>.
						You can follow any responses to this entry through the <a href="https://www.codingunit.com/c-tutorial-call-by-value-or-call-by-reference/feed">RSS 2.0</a> feed.
												
													Both comments and pings are currently closed.

												
						<a href="https://twitter.com/home?status=C Tutorial – Call by Value or Call by Reference https://www.codingunit.com/c-tutorial-call-by-value-or-call-by-reference" title="Click to send this page to Twitter!" target="_blank"><img src="https://www.codingunit.com/wp-content/themes/codingunit-theme/images/tweet-this2.png" width="18" height="18" alt="Tweet This!" /> Tweet This!</a><strong> or use </strong>
<script type="text/javascript" src="https://w.sharethis.com/widget/?tabs=web&amp;charset=utf-8&amp;style=default&amp;publisher=175d6d6f-554e-47d3-97f3-e45eb2d68de7&amp;headerbg=%230997b9"></script><strong> to share this post with others.</strong>
						
					</small>
				</div>

			</div>
		</div>

	<div class="boxedup">
<!-- You can start editing here. -->

	<h3 id="comments">There are currently 101 responses to &#8220;C Tutorial – Call by Value or Call by Reference&#8221;</h3> 
        <p>Why not let us know what you think by adding your own comment!</p>
	<ol class="commentlist">

	
		<li class="alt" id="comment-10585">

            			<cite>naveen</cite> on <small>April 15th, 2014</small>:
			
			<p>Good tutorial<br />
 Thanks&#8230;</p>
		</li>

	
	
	</ol>

 

</div>

	
   <div id="back">
            <a href="#documentContent" title="up to the page content">up to content</a> &raquo;
    </div>
</div>
</div>

<div id="column2">
<div class="container-left">

							<ul><li class="listHeader"><h2>C Tutorials</h2></li>
			<hr/>
																<li><a href="https://www.codingunit.com/the-history-of-the-c-language" rel="bookmark" title="The History of the C Language">The History of the C Language</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-compilers-gnu-and-visual-studio" rel="bookmark" title="C Tutorial &#8211; Compilers (GNU and Visual Studio)">C Tutorial &#8211; Compilers (GNU and Visual Studio)</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-first-c-program-hello-world" rel="bookmark" title="First C program, Hello World">First C program, Hello World</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-variables-and-constants" rel="bookmark" title="C Tutorial &#8211; variables and constants">C Tutorial &#8211; variables and constants</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-the-if-and-switch-statement" rel="bookmark" title="C Tutorial &#8211; The if and switch statement">C Tutorial &#8211; The if and switch statement</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-for-loop-while-loop-break-and-continue" rel="bookmark" title="C Tutorial &#8211; for loop, while loop, break and continue">C Tutorial &#8211; for loop, while loop, break and continue</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-arrays-and-multi-dimensional-arrays" rel="bookmark" title="C Tutorial &#8211; Arrays and Multi-Dimensional Arrays">C Tutorial &#8211; Arrays and Multi-Dimensional Arrays</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-functions-and-global-local-variables" rel="bookmark" title="C Tutorial &#8211; Functions and Global/Local variables">C Tutorial &#8211; Functions and Global/Local variables</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-more-on-c-functions" rel="bookmark" title="C Tutorial &#8211; More on Functions">C Tutorial &#8211; More on Functions</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-how-to-use-pointers" rel="bookmark" title="C Tutorial &#8211; How to use Pointers">C Tutorial &#8211; How to use Pointers</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-more-on-pointers" rel="bookmark" title="C Tutorial &#8211; More on Pointers">C Tutorial &#8211; More on Pointers</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-strings-and-string-library-functions" rel="bookmark" title="C Tutorial &#8211; strings and string Library Functions">C Tutorial &#8211; strings and string Library Functions</a></li>
									<li><a href="https://www.codingunit.com/printf-format-specifiers-format-conversions-and-formatted-output" rel="bookmark" title="C Tutorial &#8211; printf, Format Specifiers, Format Conversions and Formatted Output">C Tutorial &#8211; printf, Format Specifiers, Format Conversions and Formatted Output</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-structures-unions-typedef" rel="bookmark" title="C Tutorial &#8211; structures, unions, typedef">C Tutorial &#8211; structures, unions, typedef</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-file-io-using-text-files" rel="bookmark" title="C Tutorial &#8211; File I/O (using text files)">C Tutorial &#8211; File I/O (using text files)</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-the-functions-malloc-and-free" rel="bookmark" title="C Tutorial &#8211; The functions malloc and free">C Tutorial &#8211; The functions malloc and free</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-binary-file-io" rel="bookmark" title="C Tutorial &#8211; Binary File I/O">C Tutorial &#8211; Binary File I/O</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-deleting-and-renaming-a-file" rel="bookmark" title="C Tutorial &#8211; Deleting and Renaming a File">C Tutorial &#8211; Deleting and Renaming a File</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-copying-a-file-in-c" rel="bookmark" title="C Tutorial &#8211; Copying a File">C Tutorial &#8211; Copying a File</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-command-line-parameter-parsing" rel="bookmark" title="C Tutorial &#8211; Command Line Parameter Parsing">C Tutorial &#8211; Command Line Parameter Parsing</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-how-to-use-time-and-date-in-c" rel="bookmark" title="How to use Time and Date in C">How to use Time and Date in C</a></li>
									<li><a href="https://www.codingunit.com/writing-memory-to-a-file-and-reading-memory-from-a-file-in-c" rel="bookmark" title="Writing Memory to a File and Reading Memory from a File in C">Writing Memory to a File and Reading Memory from a File in C</a></li>
									<li><a href="https://www.codingunit.com/how-to-make-a-calendar-in-c" rel="bookmark" title="How to make a Calendar in C">How to make a Calendar in C</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-searching-for-strings-in-a-text-file" rel="bookmark" title="C Tutorial &#8211; Searching for Strings in a Text File">C Tutorial &#8211; Searching for Strings in a Text File</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-number-of-seconds-in-decade-and-visaversa" rel="bookmark" title="C Tutorial &#8211; Number of Seconds in Decade and Visa-Versa">C Tutorial &#8211; Number of Seconds in Decade and Visa-Versa</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-a-star-pyramid-and-string-triangle-using-for-loops" rel="bookmark" title="C Tutorial – A Star pyramid and String triangle using for loops">C Tutorial – A Star pyramid and String triangle using for loops</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-call-by-value-or-call-by-reference" rel="bookmark" title="C Tutorial – Call by Value or Call by Reference">C Tutorial – Call by Value or Call by Reference</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-deleting-a-record-from-a-binary-file" rel="bookmark" title="C Tutorial – Deleting a Record from a Binary File">C Tutorial – Deleting a Record from a Binary File</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-splitting-a-text-file-into-multiple-files" rel="bookmark" title="C Tutorial – Splitting a Text File into Multiple Files">C Tutorial – Splitting a Text File into Multiple Files</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-error-handling-exception-handling" rel="bookmark" title="C Tutorial – Error Handling (Exception Handling)">C Tutorial – Error Handling (Exception Handling)</a></li>
									<li><a href="https://www.codingunit.com/c-tutorial-queues" rel="bookmark" title="Hacked By MuhmadEmad">Hacked By MuhmadEmad</a></li>
								
			</ul>
					</div>
</div>
<br class="clear" />
</div>

<div id="column3">
<div class="container-right">
	<div class="google-skyscraper"><script type="text/javascript"><!--
google_ad_client = "pub-7868601750853261";
/* 300x250, created 9/24/08 */
google_ad_slot = "9605146122";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
			<ul><li class="listHeader"><h2>Latest Posts</h2></li>
		<hr/>
				<li><a href='https://www.codingunit.com/c-tutorial-queues'>Hacked By MuhmadEmad</a></li>
	<li><a href='https://www.codingunit.com/c-tutorial-error-handling-exception-handling'>C Tutorial – Error Handling (Exception Handling)</a></li>
	<li><a href='https://www.codingunit.com/c-tutorial-splitting-a-text-file-into-multiple-files'>C Tutorial – Splitting a Text File into Multiple Files</a></li>
	<li><a href='https://www.codingunit.com/c-tutorial-deleting-a-record-from-a-binary-file'>C Tutorial – Deleting a Record from a Binary File</a></li>
	<li><a href='https://www.codingunit.com/c-tutorial-call-by-value-or-call-by-reference'>C Tutorial – Call by Value or Call by Reference</a></li>
	<li><a href='https://www.codingunit.com/checking-for-palindrome-strings-or-numbers-in-c-language'>Checking for Palindrome Strings or Numbers in C Language</a></li>
	<li><a href='https://www.codingunit.com/linear-search-algorithm-in-c-language'>Linear Search Algorithm in C Language</a></li>
	<li><a href='https://www.codingunit.com/determining-the-area-of-different-shaped-triangles-in-c'>Determining the Area of Different Shaped Triangles in C</a></li>
	<li><a href='https://www.codingunit.com/area-of-a-rectangle-circle-and-trapezium-in-c'>Area of a Rectangle Circle and Trapezium in C</a></li>
	<li><a href='https://www.codingunit.com/how-to-print-floyds-triangle-in-c'>How to Print Floyds Triangle in C</a></li>
		</ul>
		<div class="google-skyscraper"><script type="text/javascript"><!--
google_ad_client = "pub-7868601750853261";
/* 300x250, created 9/24/08 */
google_ad_slot = "9605146122";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
	<div class="google-skyscraper"><script type="text/javascript"><!--
google_ad_client = "pub-7868601750853261";
/* 300x250, created 9/24/08 */
google_ad_slot = "9605146122";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
</div>
</div>

<br class="clear" />

</div>

<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-2735312-4");
pageTracker._trackPageview();
} catch(err) {}</script>
<div id="footer">
	<hr/>
    <p>&copy; 2017 <a href="https://www.codingunit.com">CodingUnit Programming Tutorials</a>. All Rights Reserved. | <a href="mailto:contact@codingunit.com?subject=Question">Contact</a></p>
	<p><a href="https://www.codingunit.com/terms" target="_blank">TERMS</a> 
	  and <a href="https://www.codingunit.com/privacy-policy" target="_blank">Privacy Policy</a> 
	  UNDER WHICH THIS SERVICE IS PROVIDED TO YOU.</p>
</div>

</div>

<script type='text/javascript' src='https://www.codingunit.com/wp-includes/js/wp-embed.min.js?ver=4.7'></script>

</div>
</div>
        <!-- 31 queries. 0.429 seconds. -->
</body>
</html>

